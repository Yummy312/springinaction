<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">



    <util:list id="cities">

        <bean class="com.springinaction.springidol.City"
              p:name="Chicago" p:state="IL" p:population="2853114"
        />
        <bean class="com.springinaction.springidol.City"
              p:name="Atlanta" p:state="GA" p:population="537958"
        />
        <bean class="com.springinaction.springidol.City"
              p:name="Dallas" p:state="TX" p:population="1279910"
        />
        <bean class="com.springinaction.springidol.City"
              p:name="Houston" p:state="TX" p:population="2242193"
        />
    </util:list>

<!--    ____Отображение коллекций____-->
<!--    Отображение коллекций связано с выбором определенного свойства каждого элемента оригинальной коллекции -->
<!--    и помещением его в новую коллекцию. Оператор отображения (.![]) в языке SpEL выполняет именно эту -->
<!--    операцию. Например, предположим, что на основе списка объектов City необходимо получить список строк -->
<!--    с именами городов. Чтобы получить такой список, можно выполнить внедрение в свойство cityNames,-->
<!--    как показано ниже:-->

    <bean id="someBean" class="com.springinaction.springidol.SomeClass">
        <property name="cityNames" value="#{cities .![name]}"/>
    </bean>

<!--    В результате выполнения этого выражения свойству cityNames-->
<!--    будет присвоен список объектов String с такими значениями, как-->
<!--    Chicago, Atlanta, Dallas и т. д. Свойство name в квадратных скобках-->
<!--    определяет, какие элементы будет содержать получившийся в результате список-->


<!--    Но возможности отображения не ограничиваются отображением-->
<!--    одиночных свойств. С небольшими дополнениями к предыдущему-->
<!--    примеру можно получить список городов и названий штатов:-->

<!--    <bean id="someBean" class="com.springinaction.springidol.SomeClass">-->
<!--        <property name="cityNames" value="#{cities .![name + ', ' + state]}"/>-->
<!--    </bean>-->

</beans>