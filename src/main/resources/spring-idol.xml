<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <context:component-scan
            base-package="com.springinaction.springidol" />




<!--    __Конфигурирование Spring в программном коде на Java: Подготовка к конфигурированию на языке Java__-->

<!--    Несмотря на то что прием конфигурирования на языке Java позволяет описать конфигурацию приложения практически-->
<!--    без использования XML, тем не менее некоторый объем XML-кода все же необходим, чтобы подготовить-->
<!--    к использованию конфигурацию на языке Java:-->


<!--    Выше уже рассказывалось, что элемент <context:component-scan> обеспечивает автоматическую регистрацию компонентов,-->
<!--    отмеченных специальными аннотациями. Но он также автоматически загружает Java-классы, реализующие конфигурирование,-->
<!--    отмеченные аннотацией @Configuration . В данном случае атрибут base-package сообщает фреймворку Spring, что классы,-->
<!--    отмеченные аннотацией @Configuration, следует искать в пакете com.springinaction.springidol-->
</beans>